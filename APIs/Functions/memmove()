-Hàm thư viện C void *memmove(void *str1, const void *str2, size_t n) sao chép n ký tự từ str2 sang str1 , 
nhưng đối với các khối bộ nhớ chồng chéo, memmove() là một cách tiếp cận an toàn hơn memcpy().


Nó khác với memcpy() như thế nào ? 
-memcpy() chỉ cần sao chép từng dữ liệu từ vị trí này sang vị trí khác. Mặt khác, memmove() sao chép dữ liệu trước tiên vào bộ đệm trung gian, 
sau đó từ bộ đệm đến đích.
-memcpy() dẫn đến sự cố khi các chuỗi chồng lên nhau. 

-Hàm memmove() cũng có một số rủi ro và nguy hiểm nếu không sử dụng đúng cách, ví dụ như:
+Sao chép quá nhiều byte dữ liệu hơn kích thước của vùng bộ nhớ đích. Điều này có thể ghi 
đè lên các dữ liệu quan trọng khác hoặc gây ra lỗi tràn bộ nhớ.
+Sao chép một số byte dữ liệu nhỏ hơn kích thước của vùng bộ nhớ đích. Điều này có thể để 
lại các dữ liệu cũ hoặc rác trong vùng bộ nhớ đích.
+Sử dụng các con trỏ không hợp lệ hoặc không được khởi tạo để truyền vào hàm memmove(). 
Điều này có thể gây ra lỗi truy cập bộ nhớ hoặc lỗi con trỏ treo.
